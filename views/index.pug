- const types = ['sync', 'async', 'syncBusy', 'asyncBusy', 'syncMemo', 'asyncMemo'];
- const titles = ['Synchronous Fibonacci', 'Asynchronous Fibonacci', 'Synchronous Fibonacci with Busywork', 'Asynchronous Fibonacci with Busywork', 'Memoized Synchronous Fibonacci', 'Memoized Asynchronous Fibonacci'];
- const hyphenizedTypes = ['sync', 'async', 'sync-busy', 'async-busy', 'sync-memo', 'async-memo'];
- const browsers = ['firefox-based', 'chromium-based', 'firefox', 'chromium', 'chrome', 'opera', 'safari', 'edge', 'firefox-mobile', 'chrome-mobile', 'opera-mobile', 'mobile-safari', 'uc-browser', 'samsung-mobile']
- const browserLabels = ['All Firefox-based', 'All Chromium-based', 'Firefox', 'Chromium', 'Chrome', 'Opera', 'Safari', 'Edge', 'Firefox Mobile', 'Chrome Mobile', 'Opera Mobile', 'Mobile Safari', 'UC Browser', 'Samsung Mobile']
- const oss = ['mac os', 'windows', 'linux', 'android', 'ios']
- const osLabels = ['macOS', 'Windows', 'Linux', 'Android', 'iOS']
- const numCores = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]

doctype html
html
  head
    meta(name='csrf-token', content= csrf)
    title= title
    link(rel='shortcut icon', type='image/x-icon', href='./favicon.ico')
    script(type='text/javascript', src='./main.bundle.js')
    script(type='text/javascript', src='https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js')
    link(href='https://fonts.googleapis.com/css?family=Arsenal|Oxygen+Mono')
    link(rel='stylesheet', href='./stylesheets/reset.css')
    if isMobile
      link(rel='stylesheet', href='./stylesheets/mobile.css')
    else
      link(rel='stylesheet', href='./stylesheets/desktop.css')
    link(rel='stylesheet', href='./stylesheets/styles.css')
    link(rel='stylesheet', href='./stylesheets/sunburst.css')
    script(defer='', src='https://use.fontawesome.com/releases/v5.0.1/js/all.js')
    script= 'window.isMobile = ' + isMobile
    script(id='types')= 'window.types = [' + types.map(function(type) { return `'${type}'` }).toString() + '];'
  body
    if !agreedToPivacyNotice
      div.privacy-notice-container
        div#privacy-notice When using any of the benchmarks on this website, information about your operating system, your browser, and the number of CPU cores on your device is stored on a server. This is information is stored purely to further the understanding of asynchronicity. By using these benchmarks, you agree to this use of your information. No uniquely identifying information, including your IP address, will ever be stored, and no stored information will ever be used for commercial purposes. 
        span#agree-button Agree

    h1= title
    div#subtitle
      span by
        a(href='http://www.matthiasjenny.com')= ' Matthias Jenny'
      a(href='https://github.com/m1010j/async-explorations/')
        i.fab.fa-github
    div.navigation
      span.bold#benchmarks-span Benchmarks
      span#results-span Results

    div#chart-container-container        
      div#chart-container
        h4#chart-title Average calculation times (in milliseconds) per input size on any operating system using any number of logical cores
        canvas#chart
        div.form-container
          span.form-label Algorithms:
          form.checkboxes
            each type, idx in types
              label.checkbox-label(for=hyphenizedTypes[idx] + '-checkbox')= type
                input.checkbox(type='checkbox', id=hyphenizedTypes[idx] + '-checkbox', name='type', value=hyphenizedTypes[idx])
                span.checkmark
        div.form-container            
          span.form-label Average or minumum time:
          form.radios#avg-or-min-radios
            label.radio-label.avg-or-min-radio-label(for='avg-radio') Average
              input(type='radio', id='avg-radio', name='avg-or-min', checked=true, value='avg')
              span.radio-span
            label.radio-label.avg-radio-label(for='min-radio') Minimum
              input(type='radio', id='min-radio', name='min-or-min', value='min')
              span.radio-span
        div.form-container          
          span.form-label Browsers:
          form.checkboxes#browser-checkboxes
            label.checkbox-label(for='all-browsers-checkbox') All browsers
              input.checkbox(type='checkbox', id='all-browsers-checkbox', name='browser', value='all-browsers', checked=true)
              span.checkmark
            each browser, idx in browsers
              label.checkbox-label(for=browser +'-checkbox')= browserLabels[idx]
                input.checkbox(type='checkbox', id=browser +'-checkbox', name='browser', value=browser)
                span.checkmark
        div.form-container
          span.form-label Operating system:
          form.radios#os-radios
            label.radio-label.os-radio-label(for='all-radio') All
              input(type='radio', id='all-radio', name='os', checked=true, value='undefined')
              span.radio-span
            each os, idx in oss
              label.radio-label.os-radio-label(for=os.split(' ').join('') +'-radio')= osLabels [idx]
                input(type='radio', id=os.split(' ').join('') + '-radio', name='os', value=os)
                span.radio-span
        div.form-container            
          span.form-label Number of logical cores:
          form.radios#num-cores-radios
            label.radio-label.num-cores-radio-label(for='all-core-radio') All
                input(type='radio', id='all-core-radio', name='num-cores', checked=true, value='undefined')
                span.radio-span
            each num in numCores
              label.radio-label.num-cores-radio-label(for=num +'-core-radio')= num
                input(type='radio', id=num +'-core-radio', name='num-cores', value=num)
                span.radio-span
        div.form-container            
          span.form-label Maximum n:
          form#slider-form
            input#slider(type='range', min='1', max='100', value='45')
            span#slider-span 45
        input.submit(id='reset-chart-button', type='submit' value='Reset to default options')

    main#main
      each type, idx in types
        div.container(id= hyphenizedTypes[idx] + '-container')
          h2= titles[idx]
          div.source(id= hyphenizedTypes[idx] + '-source')
          h3 Benchmark
          form.type-form(id= hyphenizedTypes[idx] + '-form')
            input.n-input(id= hyphenizedTypes[idx] + '-n', type='number', placeholder='n')
            input.submit(id= hyphenizedTypes[idx] + '-submit', type='submit', disabled, value='Invoke')
          div.result-container
            div.result(id= hyphenizedTypes[idx] + '-result')
            div.result(id= hyphenizedTypes[idx] + '-time')
          div.spinner-container.hidden(id= hyphenizedTypes[idx] + '-spinner-container')
            div.lds-ring
              div
              div
              div
              div